[{"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\index.js":"1","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\App.js":"2","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Error\\Error.js":"3","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\FocusColor\\FocusColor.js":"4","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\FocusColor\\FocusColorElement.js":"5","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Games Page\\Games.js":"6","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Home\\Home.js":"7","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Spot Up\\SpotUp.js":"8"},{"size":222,"mtime":1609486576505,"results":"9","hashOfConfig":"10"},{"size":751,"mtime":1612796460277,"results":"11","hashOfConfig":"10"},{"size":431,"mtime":1612799936016,"results":"12","hashOfConfig":"10"},{"size":870,"mtime":1612808203245,"results":"13","hashOfConfig":"10"},{"size":4454,"mtime":1612514993702,"results":"14","hashOfConfig":"10"},{"size":2712,"mtime":1614087166367,"results":"15","hashOfConfig":"10"},{"size":1521,"mtime":1614067597627,"results":"16","hashOfConfig":"10"},{"size":4313,"mtime":1614086593043,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1derpe2",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\index.js",[],["37","38"],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\App.js",[],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Error\\Error.js",[],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\FocusColor\\FocusColor.js",["39"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FocusColorElement from \"./FocusColorElement\";\r\nimport \"./FocusColor.css\";\r\n\r\nfunction FocusColor() {\r\n  const [counter, setCounter] = useState(5);\r\n  const [scoreCard, setScoreCard] = useState(0);\r\n\r\n  useEffect(() => {\r\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n  }, [counter]);\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"top-bar\">\r\n        <Link to=\"/games\" className=\"back-button\">\r\n          <h1>GAMES</h1>\r\n        </Link>\r\n        <h1>&nbsp;/&nbsp;FOCUS COLOR</h1>\r\n      </span>\r\n      {counter == 0 ? (\r\n        <FocusColorElement scoreCard={scoreCard} setScoreCard={setScoreCard} />\r\n      ) : (\r\n        <p className=\"countdown-fc\">Game Starts in: {counter} </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FocusColor;\r\n","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\FocusColor\\FocusColorElement.js",["40","41"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./FocusColor.css\";\r\nfunction FocusColorElement({ scoreCard, setScoreCard }) {\r\n  const [questionColor, setQuestionColor] = useState(\"\");\r\n\r\n  const colors = [\"Red\", \"Blue\", \"Green\", \"Orange\", \"Pink\", \"Purple\", \"Brown\"];\r\n  var randomColorGenerator1,\r\n    randomTextGenerator1,\r\n    randomColorGenerator2,\r\n    randomTextGenerator2,\r\n    randomColorGenerator3,\r\n    randomTextGenerator3,\r\n    randomColorGenerator4,\r\n    randomTextGenerator4,\r\n    randomColorGenerator5,\r\n    randomTextGenerator5,\r\n    randomColorGenerator6,\r\n    randomTextGenerator6,\r\n    randomColorGenerator7,\r\n    randomTextGenerator7;\r\n  var textGenerator;\r\n  var arr_text = [];\r\n  var arr_color = [];\r\n\r\n  while (arr_text.length < 7) {\r\n    var r = Math.floor(Math.random() * colors.length);\r\n    if (arr_text.indexOf(r) === -1) arr_text.push(r);\r\n  }\r\n  while (arr_color.length < 7) {\r\n    var r = Math.floor(Math.random() * colors.length);\r\n    if (arr_color.indexOf(r) === -1) arr_color.push(r);\r\n  }\r\n\r\n  console.log(arr_text);\r\n  randomColorGenerator1 = colors[arr_color[0]];\r\n  randomTextGenerator1 = colors[arr_text[0]];\r\n  randomColorGenerator2 = colors[arr_color[1]];\r\n  randomTextGenerator2 = colors[arr_text[1]];\r\n  randomColorGenerator3 = colors[arr_color[2]];\r\n  randomTextGenerator3 = colors[arr_text[2]];\r\n  randomColorGenerator4 = colors[arr_color[3]];\r\n  randomTextGenerator4 = colors[arr_text[3]];\r\n  randomColorGenerator5 = colors[arr_color[4]];\r\n  randomTextGenerator5 = colors[arr_text[4]];\r\n  randomColorGenerator6 = colors[arr_color[5]];\r\n  randomTextGenerator6 = colors[arr_text[5]];\r\n  randomColorGenerator7 = colors[arr_color[6]];\r\n  randomTextGenerator7 = colors[arr_text[6]];\r\n\r\n  textGenerator = [\r\n    randomTextGenerator1,\r\n    randomTextGenerator2,\r\n    randomTextGenerator3,\r\n    randomTextGenerator4,\r\n    randomTextGenerator5,\r\n    randomTextGenerator6,\r\n    randomTextGenerator7,\r\n  ];\r\n\r\n  useEffect(() => {\r\n    var q_color =\r\n      textGenerator[Math.floor(Math.random() * textGenerator.length)];\r\n    setQuestionColor(q_color);\r\n    var msg = new SpeechSynthesisUtterance();\r\n    var voices = window.speechSynthesis.getVoices();\r\n    msg.voice = voices[Math.floor(Math.random() * voices.length)];\r\n    msg.text = q_color;\r\n    console.log(q_color);\r\n    speechSynthesis.speak(msg);\r\n  }, [scoreCard]);\r\n\r\n  function handleClick(e) {\r\n    if (e.target.innerText === questionColor) {\r\n      setScoreCard(scoreCard + 1);\r\n    } else {\r\n      setScoreCard(0);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"button-fc\">\r\n      <div className=\"play-fc\">\r\n        <button className=\"play-now-fc\" style={{ color: randomColorGenerator1 }} onClick={handleClick}>\r\n        <p className=\"play-now-text-fc\">{randomTextGenerator1}</p>\r\n        </button>\r\n      </div>\r\n      <div className=\"play-fc\">\r\n        <button className=\"play-now-fc\" style={{ color: randomColorGenerator2 }} onClick={handleClick}>\r\n        <p className=\"play-now-text-fc\">{randomTextGenerator2}</p>\r\n        </button>\r\n      </div>\r\n      <div className=\"play-fc\">\r\n        <button className=\"play-now-fc\" style={{ color: randomColorGenerator3 }} onClick={handleClick}>\r\n        <p className=\"play-now-text-fc\">{randomTextGenerator3}</p>\r\n        </button>\r\n      </div>\r\n      <div className=\"play-fc\">\r\n        <button className=\"play-now-fc\" style={{ color: randomColorGenerator4 }} onClick={handleClick}>\r\n        <p className=\"play-now-text-fc\">{randomTextGenerator4}</p>\r\n        </button>\r\n      </div>\r\n      <div className=\"play-fc\">\r\n        <button className=\"play-now-fc\" style={{ color: randomColorGenerator5 }} onClick={handleClick}>\r\n        <p className=\"play-now-text-fc\">{randomTextGenerator5}</p>\r\n        </button>\r\n      </div>\r\n      <div className=\"play-fc\">\r\n        <button className=\"play-now-fc\" style={{ color: randomColorGenerator6 }} onClick={handleClick}>\r\n        <p className=\"play-now-text-fc\">{randomTextGenerator6}</p>\r\n        </button>\r\n      </div>\r\n      <div className=\"play-fc\">\r\n        <button className=\"play-now-fc\" style={{ color: randomColorGenerator7 }} onClick={handleClick}>\r\n        <p className=\"play-now-text-fc\">{randomTextGenerator7}</p>\r\n        </button>\r\n      </div>\r\n      </div>\r\n      <br />\r\n      <p className=\"score-fc\">\r\n      Your score is: {scoreCard}\r\n      </p>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FocusColorElement;\r\n","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Games Page\\Games.js",["42"],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Home\\Home.js",[],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Spot Up\\SpotUp.js",["43","44","45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":22,"column":16,"nodeType":"53","messageId":"54","endLine":22,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":30,"column":9,"nodeType":"57","messageId":"58","endLine":30,"endColumn":10},{"ruleId":"59","severity":1,"message":"60","line":70,"column":6,"nodeType":"61","endLine":70,"endColumn":17,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":17,"nodeType":"57","messageId":"65","endLine":2,"endColumn":25},{"ruleId":"51","severity":1,"message":"52","line":41,"column":28,"nodeType":"53","messageId":"54","endLine":41,"endColumn":30},{"ruleId":"59","severity":1,"message":"66","line":90,"column":6,"nodeType":"61","endLine":90,"endColumn":20,"suggestions":"67"},{"ruleId":"51","severity":1,"message":"68","line":105,"column":15,"nodeType":"53","messageId":"54","endLine":105,"endColumn":17},{"ruleId":"51","severity":1,"message":"68","line":116,"column":14,"nodeType":"53","messageId":"54","endLine":116,"endColumn":16},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'r' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'textGenerator'. Either include it or remove the dependency array.","ArrayExpression",["71"],"no-unused-vars","'useState' is defined but never used.","unusedVar","React Hook useEffect has missing dependencies: 'arr' and 'numbers.length'. Either include them or remove the dependency array.",["72"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [scoreCard, textGenerator]",{"range":"77","text":"78"},"Update the dependencies array to be: [arr, countChecker, numbers.length]",{"range":"79","text":"80"},[2362,2373],"[scoreCard, textGenerator]",[1876,1890],"[arr, countChecker, numbers.length]"]