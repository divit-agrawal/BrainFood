[{"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\index.js":"1","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\App.js":"2","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\About.js":"3","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Games.js":"4","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Home.js":"5","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Navbar.js":"6","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\FocusColor.js":"7","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\FocusColorElement.js":"8","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\NavbarElements.js":"9","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\SpotUp.js":"10"},{"size":222,"mtime":1609486576505,"results":"11","hashOfConfig":"12"},{"size":711,"mtime":1611847860454,"results":"13","hashOfConfig":"12"},{"size":146,"mtime":1609492593310,"results":"14","hashOfConfig":"12"},{"size":2379,"mtime":1611915655855,"results":"15","hashOfConfig":"12"},{"size":1569,"mtime":1611903085314,"results":"16","hashOfConfig":"12"},{"size":508,"mtime":1611904621191,"results":"17","hashOfConfig":"12"},{"size":642,"mtime":1610524027528,"results":"18","hashOfConfig":"12"},{"size":3613,"mtime":1611903300527,"results":"19","hashOfConfig":"12"},{"size":636,"mtime":1609592164104,"results":"20","hashOfConfig":"12"},{"size":2439,"mtime":1611858520276,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1derpe2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\index.js",[],["48","49"],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\App.js",[],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\About.js",[],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Games.js",[],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Home.js",[],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\Navbar.js",["50"],"import React from \"react\";\r\nimport { Nav, NavLink } from \"./NavbarElements\";\r\nimport './Navbar.css';\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <NavLink to=\"/\" activeStyle>\r\n          Home\r\n        </NavLink>\r\n        <NavLink to=\"/games\" activeStyle>\r\n          Play games\r\n        </NavLink>\r\n        <a className=\"anchor\" href=\"https://www.divitagrawal.co/\" target=\"_blank\" activeStyle>\r\n          Developer\r\n        </a>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\FocusColor.js",["51"],"import React,{useState, useEffect} from \"react\";\r\nimport FocusColorElement from \"./FocusColorElement\";\r\n\r\nfunction FocusColor(){\r\n\r\n const [counter, setCounter]=useState(5);\r\n const [scoreCard, setScoreCard]=useState(0);\r\n\r\n useEffect(() => {\r\n   counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n }, [counter]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>1. Focus color </h1>\r\n      {counter == 0 ? (\r\n        <FocusColorElement\r\n          scoreCard={scoreCard}\r\n          setScoreCard={setScoreCard}\r\n        />\r\n      ) : (\r\n        <p>Game Starts in: {counter} </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default FocusColor;","C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\FocusColorElement.js",["52","53"],"import React, { useEffect, useState } from \"react\";\r\n\r\nfunction FocusColorElement({ scoreCard, setScoreCard }) {\r\n  const [questionColor, setQuestionColor] = useState(\"\");\r\n\r\n  const colors = [\"red\", \"blue\", \"green\", \"orange\", \"Pink\", \"Purple\", \"Brown\"];\r\n  var randomColorGenerator1,\r\n    randomTextGenerator1,\r\n    randomColorGenerator2,\r\n    randomTextGenerator2,\r\n    randomColorGenerator3,\r\n    randomTextGenerator3,\r\n    randomColorGenerator4,\r\n    randomTextGenerator4,\r\n    randomColorGenerator5,\r\n    randomTextGenerator5,\r\n    randomColorGenerator6,\r\n    randomTextGenerator6,\r\n    randomColorGenerator7,\r\n    randomTextGenerator7;\r\n  var textGenerator;\r\n  var arr_text = [];\r\n  var arr_color = [];\r\n\r\n  while (arr_text.length < 7) {\r\n    var r = Math.floor(Math.random() * colors.length);\r\n    if (arr_text.indexOf(r) === -1) arr_text.push(r);\r\n  }\r\n  while (arr_color.length < 7) {\r\n    var r = Math.floor(Math.random() * colors.length);\r\n    if (arr_color.indexOf(r) === -1) arr_color.push(r);\r\n  }\r\n\r\n  console.log(arr_text);\r\n  randomColorGenerator1 = colors[arr_color[0]];\r\n  randomTextGenerator1 = colors[arr_text[0]];\r\n  randomColorGenerator2 = colors[arr_color[1]];\r\n  randomTextGenerator2 = colors[arr_text[1]];\r\n  randomColorGenerator3 = colors[arr_color[2]];\r\n  randomTextGenerator3 = colors[arr_text[2]];\r\n  randomColorGenerator4 = colors[arr_color[3]];\r\n  randomTextGenerator4 = colors[arr_text[3]];\r\n  randomColorGenerator5 = colors[arr_color[4]];\r\n  randomTextGenerator5 = colors[arr_text[4]];\r\n  randomColorGenerator6 = colors[arr_color[5]];\r\n  randomTextGenerator6 = colors[arr_text[5]];\r\n  randomColorGenerator7 = colors[arr_color[6]];\r\n  randomTextGenerator7 = colors[arr_text[6]];\r\n\r\n  textGenerator = [\r\n    randomTextGenerator1,\r\n    randomTextGenerator2,\r\n    randomTextGenerator3,\r\n    randomTextGenerator4,\r\n    randomTextGenerator5,\r\n    randomTextGenerator6,\r\n    randomTextGenerator7,\r\n  ];\r\n\r\n  useEffect(() => {\r\n    var q_color =\r\n      textGenerator[Math.floor(Math.random() * textGenerator.length)];\r\n    setQuestionColor(q_color);\r\n    var msg = new SpeechSynthesisUtterance();\r\n    var voices = window.speechSynthesis.getVoices();\r\n    msg.voice = voices[Math.floor(Math.random() * voices.length)];\r\n    msg.text = q_color;\r\n    console.log(q_color);\r\n    speechSynthesis.speak(msg);\r\n  }, [scoreCard]);\r\n\r\n  function handleClick(e) {\r\n    if (e.target.innerText === questionColor) {\r\n      setScoreCard(scoreCard + 1);\r\n    } else {\r\n      setScoreCard(0);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* {arr_text}\r\n      {textGenerator}\r\n      {questionColor} */}\r\n      <button style={{ color: randomColorGenerator1 }} onClick={handleClick}>\r\n        {randomTextGenerator1}\r\n      </button>\r\n      <button style={{ color: randomColorGenerator2 }} onClick={handleClick}>\r\n        {randomTextGenerator2}\r\n      </button>\r\n      <button style={{ color: randomColorGenerator3 }} onClick={handleClick}>\r\n        {randomTextGenerator3}\r\n      </button>\r\n      <button style={{ color: randomColorGenerator4 }} onClick={handleClick}>\r\n        {randomTextGenerator4}\r\n      </button>\r\n      <button style={{ color: randomColorGenerator5 }} onClick={handleClick}>\r\n        {randomTextGenerator5}\r\n      </button>\r\n      <button style={{ color: randomColorGenerator6 }} onClick={handleClick}>\r\n        {randomTextGenerator6}\r\n      </button>\r\n      <button style={{ color: randomColorGenerator7 }} onClick={handleClick}>\r\n        {randomTextGenerator7}\r\n      </button>\r\n      <br/>\r\n      {scoreCard}\r\n      <br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FocusColorElement;\r\n",["54","55"],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\NavbarElements.js",[],"C:\\Users\\lehovo\\Desktop\\VS CODE FOLDERS\\WEB DEV\\BrainFood\\src\\Components\\SpotUp.js",["56","57","58"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./SpotUp.css\";\r\n\r\nfunction SpotUp() {\r\n  const [countChecker, setCountChecker] = useState(0);\r\n\r\n  const numbers = [\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    13,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    20,\r\n    21,\r\n    22,\r\n    23,\r\n    24,\r\n    25,\r\n  ];\r\n  var arr = [];\r\n  while (arr.length < 25) {\r\n    var r = Math.floor(Math.random() * numbers.length);\r\n    if (arr.indexOf(r) === -1) arr.push(r);\r\n  }\r\n  var a = arr.slice(0, 5);\r\n  var b = arr.slice(5, 10);\r\n  var c = arr.slice(10, 15);\r\n  var d = arr.slice(15, 20);\r\n  var e = arr.slice(20, 25);\r\n\r\n  function handleClick(e) {\r\n    if (e.target.innerText == countChecker) {\r\n      if(countChecker != 24){\r\n      setCountChecker(countChecker + 1);\r\n      }\r\n      else\r\n      setCountChecker(\"Bravo\");\r\n    }\r\n    else{\r\n      setCountChecker(0);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {countChecker}\r\n      <div className=\"status\">\r\n        <div className=\"board-row\">\r\n          {a.map((ele) => {\r\n            return (\r\n              <button className=\"square\" onClick={handleClick}>\r\n                {ele}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {b.map((ele) => {\r\n            return (\r\n              <button className=\"square\" onClick={handleClick}>\r\n                {ele}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {c.map((ele) => {\r\n            return (\r\n              <button className=\"square\" onClick={handleClick}>\r\n                {ele}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {d.map((ele) => {\r\n            return (\r\n              <button className=\"square\" onClick={handleClick}>\r\n                {ele}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {e.map((ele) => {\r\n            return (\r\n              <button className=\"square\" onClick={handleClick}>\r\n                {ele}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <button className=\"reset-button\" onClick={handleClick} >\r\n        RESET\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpotUp;\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":14,"column":9,"nodeType":"65","endLine":14,"endColumn":95},{"ruleId":"66","severity":1,"message":"67","line":16,"column":16,"nodeType":"68","messageId":"69","endLine":16,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":30,"column":9,"nodeType":"72","messageId":"73","endLine":30,"endColumn":10},{"ruleId":"74","severity":1,"message":"75","line":70,"column":6,"nodeType":"76","endLine":70,"endColumn":17,"suggestions":"77"},{"ruleId":"59","replacedBy":"78"},{"ruleId":"61","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":27,"nodeType":"72","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":46,"column":28,"nodeType":"68","messageId":"69","endLine":46,"endColumn":30},{"ruleId":"66","severity":1,"message":"83","line":47,"column":23,"nodeType":"68","messageId":"69","endLine":47,"endColumn":25},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'r' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'textGenerator'. Either include it or remove the dependency array.","ArrayExpression",["86"],["84"],["85"],"no-unused-vars","'useEffect' is defined but never used.","unusedVar","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [scoreCard, textGenerator]",{"range":"89","text":"90"},[2336,2347],"[scoreCard, textGenerator]"]